# Добавить 5 элементов в список и удалить первый и последний элемент
# (удаление сделать 2 способами - функциями и slice)
l = [0, 1, 'Hello', 'World', 5]
l.pop(0)
l.remove(5)
print(l)
l = [5, 6, 8, 4, 1]
print(l[1:4])

# создать список чисел от 10 до 20
b = [i for i in range(10, 21)]
print(b)

# сгенерировать список [1, 1, 1, 2, 2, 2 , 3, 3, 3]
d = [(i + 3) // 3 for i in range(10)]
print(d)

# сгенерировать список [1, 2, 1, 1, 2, 3 , 1, 2, 3]

c = [1, 2, 1]
c.extend([i for i in range(1, 4)] * 2)
print(c)

# посчитать сумму чисел в списке
b = [5, 10, 15, 12]
print(sum(b))

# создать список списков вывести список количества 2 в каждом из списков
w = [[1, 2, 3], [2, 5, 2], 2]
u = [[w[0].count(2)], [w[1].count(2)], [w.count(2)]]
print(u)

# создать список списков вывести список индексов списков где нет 2
w = [[1, 5, 3], [2, 5, 2], [5], [1, 3], [1, 2]]
ans = []
for i, j in enumerate(w):
    if 2 not in j:
        ans += [i]
print(ans)

# добавить элемент в tuple
g = ('h',)
k = [1, 2, 'Hello', 7]
l = list(g)
l.append(k)
print(tuple(l))

# Задания:
# Создать словарь, где ключи и значения числа
q = {1: 2, 2: 1, 5: 2, 6: 3}
# Посчитать сумму ключей, значений, всех абсолютно чисел
b = sum(q.keys())
print(b)
a = sum(q.values())
print(a)
c = a + b
print(c)

# Вывести значения, где ключи - четные числа

for key, val in q.items():
    if key % 2 == 0:
        print(val, end='  ')

# Вывести самый большой ключ
print(max(q.keys()))

# Вывести значение пары с самым маленьким ключем
print(min(q.items()))

# Удалить пару где ключ 3
l = {1: 5, 2: 4, 3: 3, 4: 2, 5: 1}
a = l.pop(3)
print(l)

# Сгенерировать словарь:
# {1:5, 2:4, 3:3, 4:2, 5:1}
c = {a: 6 - a for a in range(1, 6)}
print(c)

# {1:5, 2:4, 3:0, 4:2, 5:1}
c = {a: 6 - a if a % 3 != 0 else 0 for a in range(1, 6)}
print(c)

# Найти среднее значение всех ключей
c = {2: 1, 8: 1, 20: 2}
key = c.keys()
print(int(sum(key) / len(key)))

# Попробовать все методы множеств{1:5, 2:4, 3:3, 4:2, 5:1}
u = {1: 5, 2: 4, 3: 3, 4: 2, 5: 1}
p = set(u.keys())
h = set(u.values())
p.add(7)
p.discard(2)
h.pop()
print(p, h)
print(p | h)
print(p & h)
print(p ^ h)
print(p)
print(h.clear())
